# origin is the base URL of the server to be tested
origin: 'https://your-server-url.com'

# mode determines the benchmarking mode: 'rps' for requests per second, or 'concurrent' for concurrent users
mode: 'concurrent'

# concurrency sets the number of concurrent
concurrency: 300

# ramp is the ramp concurrency for the benchmark
ramp: 50

# timelimit is the total duration of the benchmark in seconds
timelimit: 30

# aiAnalysis indicates whether to analyze the benchmark results using AI
aiAnalysis:
  enable: false
  language: 'english'
  techStack: 'nodejs'
  model: 'gpt-4o'
  type: 'aigne'

# data provides dynamic values to be used in API requests
data:
  appDid: 'your-app-did'
  userDid: 'your-user-did'
  loginToken: 'your-login-token'

# logResponse determines whether to log the response body of each request
logResponse: false

# logError determines whether to log any errors encountered during requests
logError: false

# logParseApis indicates whether to log the parsed APIs
logParseApis: false

# The sitemap will be parsed and the apis will be added to the benchmark runtime
# If your provide sitemaps, you can add it here, JSON response like: { "apis": [{"name": "/api/simple-example", "api": "/api/simple-example",},{"name": "/api/full-example", "api": "/api/full-example", "method": "GET", "cookie": "login_token=$$loginToken", "format": "json", "headers": {"Content-Type": "application/json; charset=utf-8"}, "skip": false, "only": false, "body": {}, "assert": {}}], "data": {"key": "value"} }
sitemap:
  enable: false
  url: 'https://your-sitemap-url.com/sitemap'

# apiReplace is a map of API endpoints to be replaced with dynamic values
apiReplace:
  '^/api-router/': '/api-replace-router/'

# apis defines the list of API endpoints to benchmark
apis:
  - name: '/.well-known/service/api/did/login'
    api: '/.well-known/service/api/did/login'
    format: 'text'

  - name: '/.well-known/service/api/did/session:without-session'
    api: '/.well-known/service/api/did/session'
    assert:
      error: 'null'
      user: 'not-null'

  - name: '/.well-known/service/api/did/session'
    api: '/.well-known/service/api/did/session'
    cookie: 'login_token=$$loginToken'

  - name: '/.well-known/service/api/user-session'
    api: '/.well-known/service/api/user-session'
    cookie: 'login_token=$$loginToken'

  - name: '/.well-known/service/api/user/privacy/config'
    api: '/.well-known/service/api/user/privacy/config?did=$$userDid'
    cookie: 'login_token=$$loginToken'

  - name: '/__blocklet__.js'
    api: '/__blocklet__.js'
    format: 'text'

  - name: '/.well-known/service/user/settings'
    api: '/.well-known/service/user/settings?locale=en'
    cookie: 'login_token=$$loginToken'
    format: 'text'

  - name: '/.well-known/service/api/user-session/myself'
    api: '/.well-known/service/api/user-session/myself?page=1&pageSize=1&status=expired'
    cookie: 'login_token=$$loginToken'
    assert:
      error: 'null'

  - name: 'getNotifications'
    api: '/.well-known/service/api/gql'
    abtnodeFn: 'getNotifications'
    cookie: 'login_token=$$loginToken'
    body:
      teamDid: '$$appDid'
      receiver: '$$userDid'

  - name: 'getNotificationComponents'
    api: '/.well-known/service/api/gql'
    abtnodeFn: 'getNotificationComponents'
    cookie: 'login_token=$$loginToken'
    body:
      teamDid: '$$appDid'
      receiver: '$$userDid'
